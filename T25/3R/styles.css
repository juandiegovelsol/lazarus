/* styles.css */

/* CSS variables to store animation properties */
:root {
  --animation-time: 0.5s;
  --translation-time: 2s;
  --lift-distance: -20px;
  --initial-size: 100px;
  --hover-size: 120px;
  --initial-font-size: 16px;
  --hover-font-size: 18px;
  --primary-color: #3498db;
  --secondary-color: #f1c40f;
  --shadow-opacity: 0.2;
  --shadow-blur: 10px;
  --rotation-radius: 20px;
  --perspective: 1000px;
}

body {
  height: 100vh;
  width: 100vw;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #f0f0f0;
  perspective: var(--perspective);
}

.button-wrapper {
  /* Button wrapper styles */
  display: inline-block;
  transition: all var(--animation-time);
  transform-style: preserve-3d;
}

.button-wrapper:hover {
  /* Button wrapper styles on hover */
  animation: circular-translation var(--translation-time) ease-in-out infinite;
}

.interactive-button {
  /* Initial button styles */
  position: relative;
  width: var(--initial-size);
  height: var(--initial-size);
  font-size: var(--initial-font-size);
  border: none;
  border-radius: 20px;
  cursor: pointer;
  background-image: linear-gradient(
    90deg,
    var(--primary-color),
    var(--secondary-color),
    var(--primary-color)
  );
  background-size: 200% 100%;
  color: #fff;
  transition: all var(--animation-time);
}

.interactive-button::before {
  /* Shadow pseudo-element */
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  background-color: rgba(0, 0, 0, var(--shadow-opacity));
  filter: blur(var(--shadow-blur));
  transform: scaleY(0.2) translateY(100%);
  opacity: 0.5;
  transition: all var(--animation-time);
  z-index: -1;
}

.button-wrapper:hover .interactive-button {
  /* Button styles on hover */
  width: var(--hover-size);
  height: var(--hover-size);
  font-size: var(--hover-font-size);
  border-radius: 50%;
  transform: translateY(var(--lift-distance));
  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);
  background-size: 200% 100%;
  animation: var(--animation-time) wave linear infinite;
}

.button-wrapper:hover .interactive-button::before {
  /* Shadow styles on hover */
  transform: scaleY(0.4) translateY(90%);
  opacity: 0.8;
}

@keyframes wave {
  /* Animation to create a waving effect */
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: -200% 50%;
  }
}

@keyframes circular-translation {
  0% {
    transform: translateX(var(--rotation-radius)) translateZ(0);
  }
  25% {
    transform: translateX(0) translateZ(var(--rotation-radius));
  }
  50% {
    transform: translateX(calc(var(--rotation-radius) * -1)) translateZ(0);
  }
  75% {
    transform: translateX(0) translateZ(calc(var(--rotation-radius) * -1));
  }
  100% {
    transform: translateX(var(--rotation-radius)) translateZ(0);
  }
}
