@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&family=Teko:wght@300;400;500;600;700&display=swap");

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: "Teko", sans-serif;
  background-color: darkslategray;
}

button {
  font-family: "Teko", sans-serif;
}

.main-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
}

/* Modify the nav section to center the add book button */
.main-container > nav {
  background-color: ghostwhite;
  font-size: 4rem;
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 4px 40px;
  box-shadow: rgba(33, 35, 38, 0.1) 0px 10px 10px -10px;
}

.main-container > nav > button {
  font-size: 3rem;
  margin: 0 20px;
  background-color: transparent;
  border: none;
  cursor: pointer;
  color: darkslategray;
}

.btn-header {
  background-color: transparent;
  border: none;
  cursor: pointer;
  font-size: 4rem;
}

.add {
  color: whitesmoke;
  border: 1px solid whitesmoke;
  border-radius: 1rem;
  font-size: 2rem;
}

/* Modify the library grid to have a maximum of 4 books per row */
.library-grid {
  width: 100%;
  padding: 20px;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 20px;
}

.card {
  font-family: "Roboto", sans-serif;
  display: flex;
  flex-direction: column;
  min-width: 200px;
  background-color: whitesmoke;
  padding: 20px;
  border-radius: 1rem;
  box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;
  text-align: center;
  gap: 10px;
}

.title {
  font-size: 1.5rem;
}

.author {
  font-weight: bold;
}

.pages {
  margin-bottom: 1rem;
}

.btn {
  font-size: 1.3rem;
  border-radius: 0.8rem;
  border: 1px solid darkslategrey;
  background-color: slategray;
  color: whitesmoke;
  cursor: pointer;
}

.read {
  background-color: lightgreen;
  color: black;
}

.not-read {
  background-color: lightpink;
  color: black;
}

footer {
  color: whitesmoke;
  font-size: 1.5rem;
  text-align: center;
}

.modal {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  transition: 200ms ease-in-out;
  border: 1px solid black;
  border-radius: 1rem;
  background-color: whitesmoke;
  z-index: 10;
  padding: 20px;
  font-family: "Roboto", sans-serif;
  font-size: 1.3rem;
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.modal.active {
  transform: translate(-50%, -50%) scale(1);
}

.overlay {
  position: fixed;
  opacity: 0;
  transition: 200ms ease-in-out;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.4);
  pointer-events: none;
}

.overlay.active {
  pointer-events: all;
  opacity: 1;
}

.modal-header {
  font-size: 1.2rem;
  font-weight: bold;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.close-btn {
  cursor: pointer;
  font-size: 1.5rem;
}

form {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

form > div {
  display: grid;
  grid-template-columns: 1fr 2fr;
}

input {
  outline: none;
  font-family: "Roboto", sans-serif;
  font-size: 1.1rem;
  border: 1px solid darkslategray;
  border-radius: 4px;
}

input[type="checkbox"] {
  appearance: none;
  background-color: lightpink;
  margin: 0;
  font: inherit;
  cursor: pointer;
  color: darkslategrey;
  width: 1.15em;
  height: 1.15em;
  border: 1px solid darkslategrey;
  border-radius: 0.15em;
  transform: translateY(-0.075em);
}

input[type="checkbox"]:checked {
  background-color: lightgreen;
  transform-origin: bottom left;
}

.modal-btns {
  display: flex;
  justify-content: space-between;
  cursor: pointer;
}

.modal-button {
  width: 30%;
}

/* Add media query to make the grid responsive */
@media only screen and (max-width: 1200px) {
  .library-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media only screen and (max-width: 900px) {
  .library-grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media only screen and (max-width: 600px) {
  .library-grid {
    grid-template-columns: repeat(1, 1fr);
  }
}

/* Add media query to hide the title and move the button to the left side on smaller screens */
@media only screen and (max-width: 600px) {
  .main-container > nav > span:first-child {
    display: none;
  }

  .main-container > nav {
    justify-content: space-between;
  }

  .main-container > nav > button {
    margin-left: 20px;
  }
}

/* Modify the modal to make it responsive */
.modal {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  transition: 200ms ease-in-out;
  border: 1px solid black;
  border-radius: 1rem;
  background-color: whitesmoke;
  z-index: 10;
  padding: 20px;
  font-family: "Roboto", sans-serif;
  font-size: 1.3rem;
  display: flex;
  flex-direction: column;
  gap: 20px;
  width: 90%;
  max-width: 500px;
}

/* Modify the modal form to make it responsive */
form {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

form > div {
  display: flex;
  flex-direction: column;
}

form > div > label {
  margin-bottom: 5px;
}

form > div > input {
  padding: 5px;
}

/* Modify the read status selector to a button */
#status {
  appearance: none;
  background-color: lightpink;
  margin: 0;
  font: inherit;
  cursor: pointer;
  color: darkslategrey;
  width: 100px;
  height: 30px;
  border: 1px solid darkslategrey;
  border-radius: 0.15em;
  transform: translateY(-0.075em);
  display: none;
}

.read-status-btn {
  margin-top: 20px;
  background-color: lightpink;
  color: black;
  border: 1px solid darkslategrey;
  padding: 5px 10px;
  font-size: 1.5rem;
  cursor: pointer;
  border-radius: 0.15em;
}

.read-status-btn.read {
  background-color: lightgreen;
}
